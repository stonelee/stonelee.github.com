<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: vim | Stonelee's Blog]]></title>
  <link href="http://stonelee.info/blog/categories/vim/atom.xml" rel="self"/>
  <link href="http://stonelee.info/"/>
  <updated>2013-01-04T16:51:06+08:00</updated>
  <id>http://stonelee.info/</id>
  <author>
    <name><![CDATA[stonelee]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[vim最佳插件实践]]></title>
    <link href="http://stonelee.info/blog/2011/01/09/vim-plugin/"/>
    <updated>2011-01-09T00:00:00+08:00</updated>
    <id>http://stonelee.info/blog/2011/01/09/vim-plugin</id>
    <content type="html"><![CDATA[<p>基本都是直接复制到bundle，然后添加doc帮助</p>

<p><code>
：helptags ~/.vim/bundle/something/doc
</code></p>

<h2><a href="http://www.vim.org/scripts/script.php?script_id=2332">pathogen</a> 将插件按文件夹放置，方便管理</h2>

<p>将pathogen放到autoload下</p>

<p>.vimrc:</p>

<p><code>vim
filetype off
call pathogen#runtime_append_all_bundles()"方便管理plugin
filetype plugin indent on
</code></p>

<h2><a href="http://www.vim.org/scripts/script.php?script_id=790">python增强语法高亮</a></h2>

<h2><a href="http://www.vim.org/scripts/script.php?script_id=30">python增强编辑</a></h2>

<p>会提供一个python菜单，快捷键也相应提供了</p>

<h2><a href="http://www.vim.org/scripts/script.php?script_id=159">minibufexpl</a>多标签切换</h2>

<p>.vimrc:</p>

<p><code>vim
"&lt;C-hjkl&gt;minibuffer中移动
let g:miniBufExplMapWindowNavVim = 1
"&lt;C-TAB&gt; and &lt;C-S-TAB&gt; 直接在当前窗口切换buffer
let g:miniBufExplMapCTabSwitchBufs = 1
"防止与Taglist冲突
let g:miniBufExplModSelTarget = 1
</code></p>

<h2><a href="http://www.vim.org/scripts/script.php?script_id=1218">NERDCommenter</a>自动注释</h2>

<p><code>
&lt;leader&gt;c&lt;space&gt;来切换注释与否
</code></p>

<h2><a href="http://www.vim.org/scripts/script.php?script_id=1658">NERDTree</a>树状菜单</h2>

<p>.vimrc:</p>

<p><code>vim
map &lt;leader&gt;e :NERDTreeToggle&lt;cr&gt;
let NERDTreeIgnore=['.vim$', '\~$', '.*\.pyc$', 'pip-log\.txt$']
</code></p>

<p><code>
&lt;leader&gt;e来切换树形菜单显示与否
</code></p>

<h2><a href="http://code.google.com/p/xptemplate/">xptemplate</a> Snippet Template engine</h2>

<p>支持嵌套，支持同文件多模板识别</p>

<p><code>
&lt;C-\&gt;显示模板，&lt;Tab&gt;&lt;S-Tab&gt;切换焦点
</code></p>

<p>自己更改模板：
ftplugin下找到对应模板文件，添加新的模板</p>

<p>去掉多余空格：
.vimrc:</p>

<p><code>vim
let g:xptemplate_vars = "SParg="
</code></p>

<h2>Ack 目录文件中查找字符</h2>

<p>安装Ack:</p>

<p><code>bash
sudo apt-get install ack-grep
</code></p>

<p>安装 <a href="https://github.com/mileszs/ack.vim">Ack</a>插件
.vimrc:</p>

<p><code>vim
let g:ackprg="ack-grep -H --nocolor --nogroup --column"
</code></p>

<p>Ack something可以在当前目录查找字符</p>

<h2><a href="http://www.vim.org/scripts/script.php?script_id=2981">zencoding</a>扩展html</h2>

<p>```
<C-y>, 扩展
<C-y>n <C-y>N 到下/上一个输入点</p>

<p><C-y>d <C-y> D选中
<C-y>j 简写标签，也可扩展</p>

<p><C-y>i img上使用可以自动添加宽高
<C-y>a 在连接上可以添加a标签
```</p>

<h2><a href="http://www.vim.org/scripts/script.php?script_id=1234">YankRing</a>增强型粘贴</h2>

<p>```
:YRShow显示剪贴板</p>

<p><C-p> <C-n> 轮番切换剪贴板
```</p>

<h2><a href="http://www.vim.org/scripts/script.php?script_id=2996">translate</a></h2>

<p><code>
:Trans翻译光标所在文字
</code></p>

<h2><a href="http://www.vim.org/scripts/script.php?script_id=1697">surround</a>增删改标签</h2>

<p><code>
ds“ 删除两端的”“
dst 删除两端的标签
cs”{ 将两端的“”改为{  } 有空格
cs”} 将两端的“”改为{} 无空格
yss) 两端加上()
ysiw） 将光标所在单词两端加上（）
配合repeat实现.重复操作
</code></p>

<h2><a href="https://github.com/jpalardy/dotfiles/raw/master/vim/plugin/slime.vim">slime</a>测试代码段</h2>

<p>终端中建立一个screen</p>

<p>```bash
screen -S devshell
python</p>

<p>选中代码，<C-c><C-c>可以在screen中查看运行情况。
```</p>

<p>screen的使用可以参看：
http://hi.baidu.com/ubuntu2me/blog/item/ce61b23798a5a93b0b55a960.html
http://wiki.ubuntu.org.cn/GNUScreen
http://www.9usb.net/201002/linux-screen-mingling.html</p>

<h2><a href="http://www.vim.org/scripts/script.php?script_id=2914">pep8</a>代码静态检查</h2>

<p>需要先安装工具 "pep8":http://github.com/cburroughs/pep8.py
F5 安装pep8规则检查代码</p>

<h2><a href="http://www.vim.org/scripts/script.php?script_id=2527">jpythonfold</a>代码折叠</h2>

<p>需要重命名为python.vim
.vimrc中：</p>

<p><code>vim
nnoremap &lt;space&gt; za
</code></p>

<p>空格 折叠、打开代码段
zr 打开所有折叠
zm 所有折叠</p>

<p>js代码折叠</p>

<p><code>vim
let javaScript_fold=1
</code></p>

<h2><a href="http://ctags.sourceforge.net/">ctags</a>+ <a href="http://www.vim.org/scripts/script.php?script_id=273">taglist</a>展示代码结构</h2>

<p>安装ctags，在要生成tags的目录下ctags -R
安装taglist插件</p>

<p><code>vim
:TlistToggle切换tags显示与否
</code></p>

<h2><a href="http://www.vim.org/scripts/script.php?script_id=2607">tasklist</a>显示todo列表</h2>

<p><code>vim
&lt;leader&gt;t 打开todo列表
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[windows使用vim插件cscope查询python项目]]></title>
    <link href="http://stonelee.info/blog/2010/11/17/use-cscope-in-vim-to-query-python-project/"/>
    <updated>2010-11-17T00:00:00+08:00</updated>
    <id>http://stonelee.info/blog/2010/11/17/use-cscope-in-vim-to-query-python-project</id>
    <content type="html"><![CDATA[<p>cscope可以方便的查找函数在哪里被调用，或者标签在哪些地方出现过，vim可以对其进行很好的集成。</p>

<ol>
<li>首先确保vim支持cscope，否则需要重新编译一下。</li>
<li>下载cscope的windows版本，将其解压缩，然后设置到环境变量里。</li>
<li>下载vim插件 <a href="http://cscope.sourceforge.net/cscope_maps.vim">cscope_maps</a> ，放到plugin里。</li>
<li>生成索引数据库文件。默认情况下cscope只认识c文件，为了保证我可爱的python使用，需要自己生成files文件来告诉cscope。windows下没有好用的find命令，所以自己写个，代码如下：</li>
</ol>


<p>```python
'''生成cscope.files并生成out文件
'''
<strong>revision</strong> = '0.1'
<strong>author</strong> = 'lxd'</p>

<p>PATH= r'C:\Users\lxd\Desktop\register'
FILE_TYPE_LIST= ['py']</p>

<p>if <strong>name</strong> == '<strong>main</strong>':</p>

<pre><code>import os
f = open('cscope.files','w')
for root,dirs,files in os.walk(PATH):
    for file in files:
        for file_type in FILE_TYPE_LIST:
            if file.split('.')[-1] == file_type:
                f.write('%s\n' %os.path.join(root,file))
f.close()
cmd = 'cscope -bk'
os.system(cmd)
</code></pre>

<p>```</p>

<p>使用时需要将这个文件放到项目目录下，然后更改PATH路径，程序会自动生成cscope.files文件和cscope.out文件，其中cscope.out就是要使用的索引了。</p>

<p>5.打开vim，</p>

<p><code>
:cscope add cscope.out
</code></p>

<p>数据库就成功添加了。</p>

<p>@现在在函数名上ctrl+\ 然后s@<br/>
函数调用都出来了吧...</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在ubuntu 10.0.4上编译vim7.3]]></title>
    <link href="http://stonelee.info/blog/2010/10/18/compile-vim73-in-ubuntu1004/"/>
    <updated>2010-10-18T00:00:00+08:00</updated>
    <id>http://stonelee.info/blog/2010/10/18/compile-vim73-in-ubuntu1004</id>
    <content type="html"><![CDATA[<h2>编译前准备</h2>

<p>如果要编译GVIM，需要先安装必要的库，否则可能会报各种编译错误</p>

<p><code>bash
sudo apt-get install libncurses5-dev libgnome2-dev libgnomeui-dev libgtk2.0-dev libatk1.0-dev libbonoboui2-dev libcairo2-dev libx11-dev libxpm-dev libxt-dev
</code></p>

<p>要添加python支持， 另外还需要python2.6-dev</p>

<h2>开始编译</h2>

<p><code>bash
$ cd src
$ make distclean    #防止缓存
$ ./configure --with-features=huge --enable-gui=gnome2 --enable-cscope  --enable-fontset --enable-multibyte --enable-pythoninterp --with-python-config-dir=/usr/lib/python2.6/config
$ make
$ sudo make install
</code></p>

<h2>查看特性添加与否</h2>

<p><code>vim
:version
</code></p>
]]></content>
  </entry>
  
</feed>
