<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: life | Stonelee's Blog]]></title>
  <link href="http://stonelee.info/blog/categories/life/atom.xml" rel="self"/>
  <link href="http://stonelee.info/"/>
  <updated>2013-03-18T15:37:09+08:00</updated>
  <id>http://stonelee.info/</id>
  <author>
    <name><![CDATA[stonelee]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[我的2012]]></title>
    <link href="http://stonelee.info/blog/2012/12/31/my-2012/"/>
    <updated>2012-12-31T00:00:00+08:00</updated>
    <id>http://stonelee.info/blog/2012/12/31/my-2012</id>
    <content type="html"><![CDATA[<h3>编程</h3>

<p>2012，充实的一年。</p>

<p>这一年我的工作重心完全偏向了前端开发，技术上感觉得到了很大的提升。</p>

<p>JavaScript已经成为我最熟练的开发语言，真心感受到js编程的便利和舒适。
譬如其灵活的原型继承，譬如其优雅的函数式编程，都让我对其爱不释手。</p>

<p>js方面不敢妄称精通，但是应该已经达到了熟练的程度。平常已经遇不到什么费解的难题，需要的就是研究更多的优秀类库源码，以及在不同浏览器中进行不断的开发实践。</p>

<p>css方面可以说已经入门，对于基本样式可以想到至少两种实现方式，在实现之余还能考虑一下浏览器兼容，后期扩展等问题。当然这种程度还只能算得上入门而已，还需要在实践中不断练习，积累更多的经验。</p>

<p>html方面没有什么大的进展，还是只能使用基本的标签，希望来年能有所提升。</p>

<p>设计，交互什么的恐怕目前还是我的软肋，希望来年能有所提升。</p>

<p>作为一名码农，编程是我的职业，也是我的爱好。</p>

<p>有同事问我晚上回家不带电脑，想编程的时候怎么办。
我说很简单啊，家里有个娱乐用的笔记本，想编程了，打开Chrome浏览器，F12开控制台，代码什么的随便写丫。
根本不用理会开发环境配置运行库安装什么滴。</p>

<p>平常上网看到精美的页面，第一时间想到的是这个css该怎么实现，然后开控制台瞅瞅是不是有什么特别的。
LP说，看你整天盯着淘宝首页，干嘛呢？哈！看它的css结构，嗯嗯，有点启发～</p>

<p>当年选择python，貌似也是基于这种考虑，打开命令行随写随运行。现在使用js更加方便，随便找台电脑就可以。</p>

<h3>工作</h3>

<p>2012，渐进增强的一年。</p>

<p>对前端架构的选择，经历了一个转变的过程:</p>

<p><code>
Ext JS -&gt; jQuery UI -&gt; Arale -&gt; 新前端框架
</code></p>

<p>年初参与了一个信息化项目，当时的情况是工期非常紧，工作量非常大，人员非常少，开发水平非常一般，包括负责前端技术研究的我都是半吊子的新手。
在没办法的情况下，使用了Ext JS作为前端开发框架，使用MVC分离耦合，为快出成果大量使用其中的界面控件，并且根据项目需要扩展了几个控件，最终算是按期交出了东西。
但是在使用过程中发现问题很多。最突出的问题是用户反映操作各种慢，然后是代码各种乱，然后是调试各种不顺，系统扩展各种困难。
Ext JS这种一揽子方案恐怕不是银弹!</p>

<p>接着我被抽调参与另一个项目，原项目组之前已经开发过类似项目，但是前端代码写的比较杂乱，不太成体系，因此让我进行一下封装，以方便后续开发。
这次我吸取了上次的教训，直接使用jQuery，从最简单的功能入手，仿照jQuery UI的做法，仅仅用了两个星期就将所有控件封装完毕，然后交给业务开发同事使用。
结果反响还不错，界面响应速度比较快，开发也相对简单容易。不足之处就是调用方法有些别扭（所有控件都以jQuery插件形式提供），this指针到处都u是搞得人头大（初次尝试开发jQuery插件，许多用法不够优雅，比较山寨）。</p>

<p>紧急项目完成了，然后接着做去年的SVG项目。在此期间接触了不少优秀的源码，如SeaJS, Arale, Backbone等等。对原有项目架构的理解也更加深入，因此进行了几次重构，扩充了功能。</p>

<p>在阅读源码，跟随大牛的过程中，我对js模块化、版本控制、测试集成、前端工作流等都有了进一步的认识，因此萌生了开发适合部门业务发展需要的自有前端框架的想法。
简单说来，就是从我们已经做过的项目入手，抽象最基本模块和功能，自己封装控件，然后供业务开发人员调用，并根据实际业务需求不断完善。这样开发出来的模块，因为从底层封装所以高效灵活，因为功能针对性强所以精简易懂。
目前已经完成大部分组件的开发，等待来年项目的检验。</p>

<h3>生活</h3>

<p>2012，幸福的一年。</p>

<p>7月领证，9月结婚，然后云南蜜月，北京宴请同学。
完成了人生的一件大事，也总算给了相恋七年的LP一个承诺。</p>

<p>喂！工作狂！留一点时间给家庭喽！</p>

<p>做好时间管理，提高工作效率，少做无用之事，腾出时间来陪伴爱我和我爱的人。</p>

<p>2012年 <a href="http://www.yuedudna.com/users/1455680/book/2012">读书14本</a></p>

<p>虽然读得不算太多，但是尽量读好书，简单罗列如下</p>

<p>技术：</p>

<ul>
<li>《JavaScript权威指南》对js知识查缺补漏</li>
<li>《JavaScript Web Applications》前端MVC实现</li>
<li>《精通CSS》对css有了全局的认识，入门好书；</li>
<li>《七周七语言》接触更多的编程范式，开阔视野;</li>
<li>《Pro Git》让我更加放心的使用Git，更自如的加入到Github这个乐园中；</li>
<li>《The Definitive Guide to Django》不能忘了后端老本行，django还是挺好用的</li>
<li>《松本行弘的程序世界》,《Ruby元编程》入手ruby</li>
<li>《Hacking Vim 7.2》对每天都在使用的编辑器不了解的多一些怎么对的起它？</li>
<li>《数学之美》了解一下基础知识</li>
</ul>


<p>社会科普：</p>

<ul>
<li>《我們最幸福》</li>
<li>《寻路中国》</li>
<li>《青花鱼教练让男人拥有“王”字腹肌》</li>
<li>《大象为什么不长毛》</li>
</ul>


<h3>希望</h3>

<p>2013年可以期待的有什么呢？</p>

<ol>
<li>在技术上能有更大的突破。js,css,html能够融会贯通，搭建自己的前端框架；建立部门的前端开发测试部署维护流水线；向部门同事分享前端开发心得体会，共同成长；关注移动平台发展，做几个演示Demo。</li>
<li>保持身体健康，养成定期健身的习惯。</li>
<li>工资增长能不能跟上物价和房价？我还是相信先尽好人事，然后其他的再说吧～</li>
</ol>

]]></content>
  </entry>
  
</feed>
